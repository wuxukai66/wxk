请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，
第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。

public class Solution {
    public ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
            ArrayList<ArrayList<Integer>> thelist=new ArrayList<ArrayList<Integer>>();
        if(pRoot==null) return thelist;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(pRoot);
        int count=1;
        while(!queue.isEmpty()){
            ArrayList<Integer> list=new ArrayList<Integer>();
            int size=queue.size();
            for(int i=0;i<size;i++){
                TreeNode tem=queue.poll();
                list.add(tem.val);
                if(tem.left!=null) queue.offer(tem.left);
                if(tem.right!=null) queue.offer(tem.right);
            }
            if(count%2==0){
                Collections.reverse(list);
                thelist.add(list);
                
            }else{
                thelist.add(list);
                
            }
           count++;
        }
         return thelist;
    }

}