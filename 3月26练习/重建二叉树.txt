输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        if(pre.length==0||in.length==0) return null;
      return  rebuild(pre,in,0,in.length-1);
    }
    
    
    int preindex=0;
    public TreeNode rebuild(int[] preorder,int[] inorder,int begin,int end){
        if(begin>end){
            return null;
        }
        TreeNode root=new TreeNode (preorder[preindex]);
        int index=findIndex(inorder,preorder[preindex],begin,end);
        preindex++;
        root.left=rebuild(preorder,inorder,begin,index-1);
        root.right=rebuild(preorder,inorder,index+1,end);
        return root;
    }
    //在中序遍历中找到根
    public int findIndex(int []inorder,int key,int begin,int end){
            for(int i=begin;i<=end;i++){
            if(inorder[i]==key){
            return i;
            }
            }
        return -1;
    }
    
    
    
}