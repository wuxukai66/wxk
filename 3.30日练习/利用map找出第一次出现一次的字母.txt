请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，
第一个只出现一次的字符是"g"。
当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
import java.util.*;
public class Solution {
    //Insert one char from stringstream
    LinkedHashMap<Character,Integer> map=new LinkedHashMap<>();
    public void Insert(char ch)
    {
        if(map.containsKey(ch)){
            map.put(ch,-1);
        }else{
            map.put(ch,1);
        }
    }
  //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
        Iterator<Character> iterator=map.keySet().iterator();
        //map.keySet().iterator()就是将map中的元素全部打包成一个集合放入iterator()
        while(iterator.hasNext()){
            char ch=iterator.next();
            if(map.get(ch) == 1){
                return ch;
            }
        }
        return '#';
    }
}